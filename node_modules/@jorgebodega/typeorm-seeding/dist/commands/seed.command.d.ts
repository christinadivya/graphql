import { DataSource } from 'typeorm';
import { Arguments, Argv, CommandModule } from 'yargs';
import { Seeder } from '../seeder';
import type { Constructable } from '../types';
interface SeedCommandArguments extends Arguments {
    dataSource?: string;
    path?: string;
}
export declare class SeedCommand implements CommandModule {
    command: string;
    describe: string;
    /**
     * @inheritdoc
     */
    builder(args: Argv): Argv<{
        d: string;
    }>;
    /**
     * @inheritdoc
     */
    handler(args: SeedCommandArguments): Promise<void>;
    static loadDataSource(dataSourceFilePath: string): Promise<DataSource>;
    static loadSeeders(seederPaths: string[]): Promise<Constructable<Seeder>[]>;
}
export {};
