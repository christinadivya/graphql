{"version":3,"file":"stripIddPrefix.test.js","names":["stripIddPrefix","metadata","describe","it","should","equal","expect","to","be","undefined"],"sources":["../../source/helpers/stripIddPrefix.test.js"],"sourcesContent":["import stripIddPrefix from './stripIddPrefix.js'\r\n\r\nimport metadata from '../../metadata.min.json'\r\n\r\ndescribe('stripIddPrefix', () => {\r\n\tit('should strip a valid IDD prefix', () => {\r\n\t\tstripIddPrefix('01178005553535', 'US', '1', metadata).should.equal('78005553535')\r\n\t})\r\n\r\n\tit('should strip a valid IDD prefix (no country calling code)', () => {\r\n\t\tstripIddPrefix('011', 'US', '1', metadata).should.equal('')\r\n\t})\r\n\r\n\tit('should strip a valid IDD prefix (valid country calling code)', () => {\r\n\t\tstripIddPrefix('0117', 'US', '1', metadata).should.equal('7')\r\n\t})\r\n\r\n\tit('should strip a valid IDD prefix (not a valid country calling code)', () => {\r\n\t\texpect(stripIddPrefix('0110', 'US', '1', metadata)).to.be.undefined\r\n\t})\r\n})"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,qBAA3B;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AAEAC,QAAQ,CAAC,gBAAD,EAAmB,YAAM;EAChCC,EAAE,CAAC,iCAAD,EAAoC,YAAM;IAC3CH,cAAc,CAAC,gBAAD,EAAmB,IAAnB,EAAyB,GAAzB,EAA8BC,QAA9B,CAAd,CAAsDG,MAAtD,CAA6DC,KAA7D,CAAmE,aAAnE;EACA,CAFC,CAAF;EAIAF,EAAE,CAAC,2DAAD,EAA8D,YAAM;IACrEH,cAAc,CAAC,KAAD,EAAQ,IAAR,EAAc,GAAd,EAAmBC,QAAnB,CAAd,CAA2CG,MAA3C,CAAkDC,KAAlD,CAAwD,EAAxD;EACA,CAFC,CAAF;EAIAF,EAAE,CAAC,8DAAD,EAAiE,YAAM;IACxEH,cAAc,CAAC,MAAD,EAAS,IAAT,EAAe,GAAf,EAAoBC,QAApB,CAAd,CAA4CG,MAA5C,CAAmDC,KAAnD,CAAyD,GAAzD;EACA,CAFC,CAAF;EAIAF,EAAE,CAAC,oEAAD,EAAuE,YAAM;IAC9EG,MAAM,CAACN,cAAc,CAAC,MAAD,EAAS,IAAT,EAAe,GAAf,EAAoBC,QAApB,CAAf,CAAN,CAAoDM,EAApD,CAAuDC,EAAvD,CAA0DC,SAA1D;EACA,CAFC,CAAF;AAGA,CAhBO,CAAR"}